name: merge_release_to_dev

on:
  pull_request:
    types:
      - closed
    branches:
      - 'release/*' # Trigger on pushes to any branch starting with 'release/'

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  automerge:
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Dump GitHub event
        run: echo "${{ toJson(github.event) }}"
      - name: Get Commit Information
        run: |
          # Get branch ref
          BRANCH_REF=$(echo ${{ github.event.pull_request.base.ref }})
          echo "BRANCH_REF=$BRANCH_REF" >> $GITHUB_ENV
          
          # Get merge commit SHA (short)
          MERGE_SHA=$(echo ${{ github.event.pull_request.merge_commit_sha }} | cut -c1-7)
          echo "MERGE_SHA=$MERGE_SHA" >> $GITHUB_ENV
          
          # Get PR head SHA (short) - this is the latest commit in the PR
          HEAD_SHA=$(echo ${{ github.event.pull_request.head.sha }} | cut -c1-7)
          echo "HEAD_SHA=$HEAD_SHA" >> $GITHUB_ENV
          
          # Get all commits in the PR
          COMMITS=$(gh pr view ${{ github.event.pull_request.number }} --json commits --jq '.commits[] | .oid')
          echo "COMMITS<<EOF" >> $GITHUB_ENV
          echo "$COMMITS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          
          # Count commits
          COMMIT_COUNT=$(echo "$COMMITS" | wc -l)
          echo "COMMIT_COUNT=$COMMIT_COUNT" >> $GITHUB_ENV
      - name: Check if PR exists
        id: check_for_pr
        run: |
          prs=$(gh pr list \
              --repo "$GITHUB_REPOSITORY" \
              --head ${{ github.event.pull_request.base.ref }} \
              --base 'main')
          if ((prs > 0)); then
              echo "PR already active"
              gh pr edit --title "Merge $BRANCH_REF at $HEAD_SHA to dev"
              exit 1
          fi
      - name: Create Pull Request
        id: create_pr
        run: gh pr create --base main --title "Merge $BRANCH_REF at $HEAD_SHA to dev"
      - name: Enable Auto-Merge for the PR
        if: steps.create_pr.outputs.pull-request-number # Only run if a PR was created
        run: gh pr merge --merge --auto ${{ steps.create_pr.outputs.pull-request-number }}
